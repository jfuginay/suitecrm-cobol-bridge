apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: suitecrm-cobol
  labels:
    app: api-gateway
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: metrics
  selector:
    app: api-gateway
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: suitecrm-cobol
  labels:
    app: api-gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - api-gateway
              topologyKey: kubernetes.io/hostname
      containers:
      - name: api-gateway
        image: ${DOCKER_REGISTRY}/cobol-api-gateway:${VERSION}
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: REDIS_HOST
          value: "redis-master"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: JWT_SECRET
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: DB_PASSWORD
        envFrom:
        - configMapRef:
            name: suitecrm-config
        volumeMounts:
        - name: cobol-programs
          mountPath: /app/cobol-programs
          readOnly: true
        - name: api-logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "0.25"
          limits:
            memory: "1Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: cobol-programs
        configMap:
          name: cobol-programs
      - name: api-logs
        emptyDir: {}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: suitecrm-cobol
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: api-gateway