user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log error;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging with additional security information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time $pipe';
    
    log_format json escape=json
        '{'
            '"time_local":"$time_local",'
            '"remote_addr":"$remote_addr",'
            '"remote_user":"$remote_user",'
            '"request":"$request",'
            '"status": "$status",'
            '"body_bytes_sent":"$body_bytes_sent",'
            '"request_time":"$request_time",'
            '"http_referrer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"http_x_forwarded_for":"$http_x_forwarded_for",'
            '"upstream_response_time":"$upstream_response_time"'
        '}';
    
    access_log /var/log/nginx/access.log json;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 100M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 32k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Caching
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json application/x-font-ttf font/opentype image/svg+xml image/x-icon;
    gzip_min_length 1000;
    gzip_disable "msie6";

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'; frame-ancestors 'self';" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Hide nginx version
    server_tokens off;
    more_clear_headers Server;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Request limiting
    limit_req_status 429;
    limit_conn_status 429;

    # Upstream configurations with health checks
    upstream suitecrm {
        least_conn;
        server suitecrm-0:80 max_fails=3 fail_timeout=30s;
        server suitecrm-1:80 max_fails=3 fail_timeout=30s;
        server suitecrm-2:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream api {
        least_conn;
        server api-gateway-0:3000 max_fails=3 fail_timeout=30s;
        server api-gateway-1:3000 max_fails=3 fail_timeout=30s;
        server api-gateway-2:3000 max_fails=3 fail_timeout=30s;
        keepalive 64;
    }

    upstream monitoring {
        server monitoring-0:80 max_fails=3 fail_timeout=30s;
        server monitoring-1:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream rules {
        server rules-editor-0:80 max_fails=3 fail_timeout=30s;
        server rules-editor-1:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream mobile {
        least_conn;
        server mobile-api-0:3001 max_fails=3 fail_timeout=30s;
        server mobile-api-1:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream debugger {
        server debugger:80 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    upstream grafana {
        server grafana:3000 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    # Map for websocket upgrade
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/ca-bundle.crt;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Default server to catch all
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 444;
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        return 444;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name suitecrm.example.com api.suitecrm.example.com monitoring.suitecrm.example.com;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Main application server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name suitecrm.example.com;

        ssl_certificate /etc/nginx/ssl/suitecrm.crt;
        ssl_certificate_key /etc/nginx/ssl/suitecrm.key;

        # Connection limiting
        limit_conn addr 100;

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Proxy settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        proxy_temp_file_write_size 64k;
        proxy_max_temp_file_size 1024m;
        
        # Main application
        location / {
            proxy_pass http://suitecrm;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Security headers for proxied requests
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
        }
        
        # Static assets with caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|doc|docx|xls|xlsx)$ {
            proxy_pass http://suitecrm;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # Login rate limiting
        location ~ /(index\.php\?module=Users&action=Login|login) {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://suitecrm;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # Upload rate limiting
        location ~ /upload {
            limit_req zone=upload burst=10 nodelay;
            client_max_body_size 100M;
            proxy_pass http://suitecrm;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Monitoring endpoint (internal only)
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }

    # API server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.suitecrm.example.com;

        ssl_certificate /etc/nginx/ssl/api.crt;
        ssl_certificate_key /etc/nginx/ssl/api.key;

        # API rate limiting
        limit_req zone=api burst=50 nodelay;
        limit_conn addr 200;

        location / {
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Increase timeouts for long-running COBOL processes
            proxy_connect_timeout 300s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # CORS headers (if not handled by application)
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
        
        # Metrics endpoint (internal only)
        location /metrics {
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            proxy_pass http://api;
        }
    }

    # Monitoring dashboard
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name monitoring.suitecrm.example.com;

        ssl_certificate /etc/nginx/ssl/monitoring.crt;
        ssl_certificate_key /etc/nginx/ssl/monitoring.key;

        location / {
            proxy_pass http://monitoring;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # WebSocket support for real-time updates
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }

    # Grafana
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name grafana.suitecrm.example.com;

        ssl_certificate /etc/nginx/ssl/grafana.crt;
        ssl_certificate_key /etc/nginx/ssl/grafana.key;

        location / {
            proxy_pass http://grafana;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }
}